-- Entity name: montgomery_multiplier_tb
-- Author: Stephen Carter, Jacob Barnett
-- Contact: stephen.carter@mail.mcgill.ca, jacob.barnett@mail.mcgill.ca
-- Date: April 06, 2016
-- Description:
-- 	Testbench used to test the Montgomery Multiplier
--		Tests autogenerated from a python script

library ieee;
use IEEE.std_logic_1164.all;
--use IEEE.std_logic_arith.all;
--use IEEE.std_logic_unsigned.all;
use IEEE.numeric_std.all;


entity montgomery_multiplier_tb is
end entity;

architecture test of montgomery_multiplier_tb is
-- define the ALU compontent to be tested
Component montgomery_multiplier is
 	Generic(
		WIDTH_IN : integer := 64
	);
	Port(	A :	in unsigned(WIDTH_IN-1 downto 0);
		B :	in unsigned(WIDTH_IN-1 downto 0);
		N :	in unsigned(WIDTH_IN-1 downto 0);
		latch : in std_logic;
		clk :	in std_logic;
		reset :	in std_logic;
		M : 	out unsigned(WIDTH_IN-1 downto 0)
	);
end component;

CONSTANT WIDTH_IN : integer := 64;

CONSTANT clk_period : time := 1 ns;

Signal N_in : unsigned(WIDTH_IN-1 downto 0) := (others => '0');
Signal A_in : unsigned(WIDTH_IN-1 downto 0) := (others => '0');
Signal B_in : unsigned(WIDTH_IN-1 downto 0) := (others => '0');

Signal clk : std_logic := '0';
Signal reset_t : std_logic := '0';
Signal latch_in : std_logic := '0';

Signal M_out : unsigned(WIDTH_IN-1 downto 0) := (others => '0');

Begin
-- device under test
dut: montgomery_multiplier PORT MAP(	A	=> 	A_in,
					B 	=> 	B_in,
					N 	=> 	N_in,
					latch	=>	latch_in,
					clk	=> 	clk,
					reset 	=>	reset_t,
					M	=>	M_out);
  
-- process for clock
clk_process : Process
Begin
	clk <= '0';
	wait for clk_period/2;
	clk <= '1';
	wait for clk_period/2;
end process;

stim_process: process
Begin


	reset_t <= '1';
	wait for 1 * clk_period;
	reset_t <= '0';
	wait for 1 * clk_period;


	REPORT "Begin test case for a=5941454599412140046 (A=7411983030803458928), b=65537 (B=7409546450459594234), N=9299371215921696779";
	REPORT "Expected output is 6476426096456513271, 0101100111100000111000110011100010011101010111000011011011110111";
	A_in <= "0110011011011100101001110100101111010000010000110110101101110000";
	B_in <= "0110011011010011111111110011110100111110011001101000110111111010";
	N_in <= "1000000100001110000000001101100111000111100000010101000000001011";
	latch_in <= '1';
	wait for 2 * clk_period;
	latch_in <= '0';
	wait for 65 * clk_period;
	ASSERT(M_out = "0101100111100000111000110011100010011101010111000011011011110111") REPORT "test failed" SEVERITY ERROR;

	REPORT "Begin test case for a=7846740661580728251 (A=21149037903105433), b=65537 (B=10328590264119552676), N=12131557196729004583";
	REPORT "Expected output is 3046976628714240059, 0010101001001001000010010001100110101001011011011111100000111011";
	A_in <= "0000000001001011001000101111000000011011100011100100110110011001";
	B_in <= "1000111101010110100001100001111100111011011001110110101010100100";
	N_in <= "1010100001011011111100101111111010100011010111011011001000100111";
	latch_in <= '1';
	wait for 2 * clk_period;
	latch_in <= '0';
	wait for 65 * clk_period;
	ASSERT(M_out = "0010101001001001000010010001100110101001011011011111100000111011") REPORT "test failed" SEVERITY ERROR;

	REPORT "Begin test case for a=7082455686747691131 (A=4383104572571339864), b=65537 (B=6835037181627796251), N=10116377256817998347";
	REPORT "Expected output is 992165260837603903, 0000110111000100111000010000110001001010101101010100101000111111";
	A_in <= "0011110011010011111010100110001011010101100000010100110001011000";
	B_in <= "0101111011011010111011100001101001100101100000110000101100011011";
	N_in <= "1000110001100100100101111000010000100110011110100011101000001011";
	latch_in <= '1';
	wait for 2 * clk_period;
	latch_in <= '0';
	wait for 65 * clk_period;
	ASSERT(M_out = "0000110111000100111000010000110001001010101101010100101000111111") REPORT "test failed" SEVERITY ERROR;

	REPORT "Begin test case for a=6585257783638855389 (A=7972655996282586479), b=65537 (B=6626614485024072821), N=12779602741511198429";
	REPORT "Expected output is 9897941686522304558, 1000100101011100100011011000010110111000101100010101100000101110";
	A_in <= "0110111010100100100100000110001100111110110011111100010101101111";
	B_in <= "0101101111110110011101101100001111001011010100010110010001110101";
	N_in <= "1011000101011010010001001111101111110010011000100001011011011101";
	latch_in <= '1';
	wait for 2 * clk_period;
	latch_in <= '0';
	wait for 65 * clk_period;
	ASSERT(M_out = "1000100101011100100011011000010110111000101100010101100000101110") REPORT "test failed" SEVERITY ERROR;



	wait;

end process;
end architecture;

